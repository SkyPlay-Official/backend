const express = require('express');
const bodyParser = require('body-parser');
const passport = require('passport');
const dotenv = require('dotenv');
const mongoose = require('mongoose');
const http = require('http');
const WebSocket = require('ws');
const { spawn } = require('child_process');

dotenv.config();
const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });
const PORT = process.env.PORT || 3000;

// Connect to MongoDB
mongoose.connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('MongoDB connected'))
  .catch((err) => console.log(err));

// Middleware
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use(passport.initialize());

// Passport configuration
require('./config/passport')(passport);

// Routes
app.use('/api/auth', require('./routes/auth'));
app.use('/api/games', require('./routes/games'));

// WebSocket for game streaming
wss.on('connection', (ws) => {
  console.log('Client connected');

  const pipeline = spawn('gst-launch-1.0', [
    '-v',
    'videotestsrc',
    'is-live=true',
    '!',
    'videoconvert',
    '!',
    'x264enc',
    'speed-preset=ultrafast',
    'tune=zerolatency',
    '!',
    'rtph264pay',
    '!',
    'udpsink',
    'host=127.0.0.1',
    'port=5000',
  ]);

  pipeline.stderr.on('data', (data) => {
    console.error(`stderr: ${data}`);
  });

  pipeline.on('close', (code) => {
    console.log(`child process exited with code ${code}`);
  });

  ws.on('message', (message) => {
    console.log('Received message:', message);
  });

  ws.on('close', () => {
    console.log('Client disconnected');
    pipeline.kill();
  });
});

// Start the server
server.listen(PORT, () => {
  console.log(`Server started on port ${PORT}`);
});
